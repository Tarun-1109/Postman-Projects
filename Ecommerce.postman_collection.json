{
	"info": {
		"_postman_id": "c1a14956-d0a9-4710-a78c-8900ad3f9c55",
		"name": "Ecommerce",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Sign Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\" , function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"var em = pm.variables.get(\"Email\");\r",
									"var pwd = pm.variables.get(\"Password\");\r",
									" \r",
									"pm.globals.set(\"Email\",em);\r",
									"pm.globals.set(\"Password\",pwd);\r",
									"console.log (em);\r",
									"console.log (pwd);\r",
									"\r",
									"/*pm.test(\"Check email \" +em, function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.em).to.eql(em);\r",
									"});\r",
									" \r",
									"pm.test(\"Check password \" +pwd, function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.pwd).to.eql(pwd);\r",
									"}); */\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\": \"{{Email}}\",\r\n\t\"password\": \"{{Password}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"pm.globals.set(\"accesstoken\", jsonData.accessToken);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\": \"{{Email}}\",\r\n\t\"password\": \"{{Password}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const jsonData = pm.response.json();\r",
									"const count = jsonData.count\r",
									"console.log (count)\r",
									"for(var i=0;i<count;i++)\r",
									"{\r",
									"    if(jsonData.users[i].email==\"Shesha800.1@gmail.com\")\r",
									"    {\r",
									"        var id = jsonData.users[i]._id;\r",
									"        console.log (id)\r",
									"        pm.globals.set(\"UserId\", id);\r",
									"        //pm.environment.set(\"Uid\", id);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User By Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/user/{{UserId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"{{UserId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"Chicken Lollypop\",\r\n\t\"price\": 500\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 20\" , function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"/*pm.test(\"Testing\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value).to.eql(100);\r",
									"});*/\r",
									"\r",
									"const count = jsonData.count\r",
									"console.log (count)\r",
									"for(var p=0;p<count;p++)\r",
									"{\r",
									"    if(jsonData.products[p].name==\"iphone\")\r",
									"    {\r",
									"        var Pid = jsonData.products[p]._id;\r",
									"        console.log (Pid)\r",
									"\r",
									"        pm.globals.set(\"ProductId\",Pid);\r",
									"        //pm.environment.set(\"ProductId\",Pid);\r",
									"        break;\r",
									"    }\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/products/{{ProductId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"{{ProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"Axe\",\r\n\t\"price\": 400\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/products/{{ProductId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"{{ProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product By Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/products/{{ProductId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"{{ProductId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Get All Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"let Oid,name;\r",
									"const count = jsonData.count\r",
									"console.log (count)\r",
									"for(let i=0;i<count;i++)\r",
									"{\r",
									"    if(jsonData.orders[i].product!=null)\r",
									"    {\r",
									"        name = jsonData.orders[i].product.name;\r",
									"        if(name==\"RealMe\")\r",
									"            {\r",
									"                Oid = jsonData.orders[i]._id;\r",
									"                console.log (Oid)\r",
									"                pm.globals.set(\"Orderid\", Oid);\r",
									"            }break;\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjJkYjkxODgzYmU1NzAwMTcyNTM2MzgiLCJpYXQiOjE2NDcxODY0NDEsImV4cCI6MTY0NzI3Mjg0MX0.XWuj_PqKKpY-wvq4srGBca0ymIrWPOPzYZBsifw6PiU",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"product\": \"BARREL EXHAUSTS\",\r\n\t\"quantity\": 2\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/orders/{{OrderId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjI5MTFlYTEzZGQzOTAwMTc1YjgyZWUiLCJpYXQiOjE2NDY4NTg4MjEsImV4cCI6MTY0Njk0NTIyMX0.BE-QmiW2UPh1sCrSh-HUftUY1YYYC8V9cS2Tyy60Rpo",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"product\": \"6229352f9d4048001709f4ae\", \r\n\t\"quantity\": 667\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/orders/{{OrderId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Order By Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjI5MTFlYTEzZGQzOTAwMTc1YjgyZWUiLCJpYXQiOjE2NDY4NTg4MjEsImV4cCI6MTY0Njk0NTIyMX0.BE-QmiW2UPh1sCrSh-HUftUY1YYYC8V9cS2Tyy60Rpo",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/orders/{{OrderId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjI5MTFlYTEzZGQzOTAwMTc1YjgyZWUiLCJpYXQiOjE2NDY4NTg4MjEsImV4cCI6MTY0Njk0NTIyMX0.BE-QmiW2UPh1sCrSh-HUftUY1YYYC8V9cS2Tyy60Rpo",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjI5MTFlYTEzZGQzOTAwMTc1YjgyZWUiLCJpYXQiOjE2NDY4NTg4MjEsImV4cCI6MTY0Njk0NTIyMX0.BE-QmiW2UPh1sCrSh-HUftUY1YYYC8V9cS2Tyy60Rpo",
			"type": "string"
		}
	]
}